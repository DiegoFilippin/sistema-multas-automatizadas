// Teste final para verificar se o QR code pay_kxq6p35gavzescuz est√° vis√≠vel
// Executar no console do navegador na p√°gina Meus Servi√ßos

console.log('üß™ === TESTE FINAL QR CODE pay_kxq6p35gavzescuz ===');

// Fun√ß√£o para encontrar e testar a cobran√ßa espec√≠fica
function testCobrancaKxq() {
  console.log('üîç Procurando cobran√ßa pay_kxq6p35gavzescuz...');
  
  // Procurar por elementos que contenham o ID da cobran√ßa
  const allElements = document.querySelectorAll('*');
  let cobrancaElement = null;
  
  for (let element of allElements) {
    if (element.textContent && element.textContent.includes('pay_kxq6p35gavzescuz')) {
      cobrancaElement = element;
      break;
    }
  }
  
  if (cobrancaElement) {
    console.log('‚úÖ Cobran√ßa encontrada na p√°gina!');
    
    // Procurar pelo bot√£o "Ver Detalhes" pr√≥ximo
    const parent = cobrancaElement.closest('div, tr, li');
    const detailsButton = parent?.querySelector('button[title*="detalhes"], button[title*="Detalhes"], button:has(svg)');
    
    if (detailsButton) {
      console.log('‚úÖ Bot√£o de detalhes encontrado! Clicando...');
      detailsButton.click();
      
      // Aguardar modal abrir
      setTimeout(() => {
        console.log('üîç Verificando modal...');
        
        const modal = document.querySelector('[role="dialog"], .modal, .fixed.inset-0');
        if (modal) {
          console.log('‚úÖ Modal aberto!');
          
          // Verificar se h√° se√ß√£o PIX
          const modalText = modal.textContent || modal.innerText;
          if (modalText.includes('Pagamento via PIX')) {
            console.log('‚úÖ Se√ß√£o PIX encontrada!');
            
            // Verificar se QR code est√° vis√≠vel
            const qrImage = modal.querySelector('img[alt*="QR"], img[src*="base64"], img[src*="data:image"]');
            if (qrImage) {
              console.log('üéâ QR CODE VIS√çVEL! SUCESSO TOTAL!');
              console.log('  - Imagem encontrada:', qrImage.tagName);
              console.log('  - Src (primeiros 100 chars):', qrImage.src.substring(0, 100) + '...');
              console.log('  - Alt text:', qrImage.alt);
            } else {
              console.log('‚ùå QR code n√£o encontrado como imagem');
              
              // Verificar se h√° mensagem de indispon√≠vel
              if (modalText.includes('QR Code Indispon√≠vel')) {
                console.log('‚ùå Ainda mostra "QR Code Indispon√≠vel"');
              } else {
                console.log('ü§î Se√ß√£o PIX existe mas QR code n√£o foi encontrado');
              }
            }
            
            // Verificar c√≥digo PIX para copiar
            if (modalText.includes('Copiar C√≥digo PIX')) {
              console.log('‚úÖ Bot√£o "Copiar C√≥digo PIX" encontrado!');
            }
            
          } else {
            console.log('‚ùå Se√ß√£o PIX n√£o encontrada no modal');
            console.log('  - Conte√∫do do modal:', modalText.substring(0, 200) + '...');
          }
        } else {
          console.log('‚ùå Modal n√£o encontrado');
        }
      }, 2000);
    } else {
      console.log('‚ùå Bot√£o de detalhes n√£o encontrado');
    }
  } else {
    console.log('‚ùå Cobran√ßa pay_kxq6p35gavzescuz n√£o encontrada na p√°gina');
    console.log('üí° Certifique-se de estar na p√°gina "Meus Servi√ßos"');
  }
}

// Executar teste
testCobrancaKxq();

console.log('üß™ === FIM TESTE ===');